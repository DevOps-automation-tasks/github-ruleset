name: Create Branch and Apply Protection

on:
  workflow_dispatch:
    inputs:
      branch_name:
        description: 'Branch name to create'
        required: true
        type: string

jobs:
  create-branch:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Read Repository URLs
      id: read-repos
      run: |
        REPO_FILE="repos.txt"
        repository_urls=()
        while IFS= read -r line; do
          repository_urls+=("$line")
        done < "$REPO_FILE"
        echo "repository_urls=${repository_urls[*]}" >> $GITHUB_ENV

    - name: Clone Repositories, Create Branch, and Push
      env:
        PERSONAL_ACCESS_TOKEN: ${{ secrets.RULESET }}
      run: |
        for repo_url in ${repository_urls[@]}; do
          echo "Processing repository: $repo_url"
          repo_name=$(basename "$repo_url" .git)
          
          # Clone the repository using the Personal Access Token for authentication
          git clone https://x-access-token:${PERSONAL_ACCESS_TOKEN}@github.com/DevOps-automation-tasks/$repo_name.git
          
          cd "$repo_name"
          
          # Create the new branch
          git checkout -b ${{ github.event.inputs.branch_name }}
          
          # Push the branch using the Personal Access Token for authentication
          git push https://x-access-token:${PERSONAL_ACCESS_TOKEN}@github.com/DevOps-automation-tasks/$repo_name.git ${{ github.event.inputs.branch_name }}
    
          cd ..
          rm -rf "$repo_name"
        done


    - name: Apply Branch Protection Rules
      run: |
        for repo_url in ${repository_urls[@]}; do
          repo_name=$(basename "$repo_url" .git)
          curl -X PUT -H "Authorization: token ${{ secrets.RULESET_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          "https://api.github.com/repos/${repo_name}/branches/${{ github.event.inputs.branch_name }}/protection" \
          -d '{
            "required_status_checks": {
              "strict": true,
              "contexts": []
            },
            "enforce_admins": true,
            "required_pull_request_reviews": {
              "dismiss_stale_reviews": true,
              "require_code_owner_reviews": true,
              "required_approving_review_count": 2
            },
            "restrictions": {
              "users": ["devops-user", "devops-bot"],
              "teams": ["devops-team"]
            },
            "required_linear_history": true,
            "allow_force_pushes": false,
            "allow_deletions": false
          }'
        done
